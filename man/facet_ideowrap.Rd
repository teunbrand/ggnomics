% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/facet_ideowrap.R
\name{facet_ideowrap}
\alias{facet_ideowrap}
\title{Wrap a 1d ribbon of panels into 2d with ideograms}
\usage{
facet_ideowrap(
  facets,
  nrow = NULL,
  ncol = NULL,
  scales = "fixed",
  shrink = TRUE,
  labeller = "label_value",
  as.table = TRUE,
  drop = TRUE,
  dir = "h",
  strip.position = "top",
  ideo.size = unit(0.1, "null"),
  high.col = NA
)
}
\arguments{
\item{facets}{A set of variables or expressions quoted by \code{\link[ggplot2:vars]{vars()}}
and defining faceting groups on the rows or columns dimension.
The variables can be named (the names are passed to \code{labeller}).

For compatibility with the classic interface, can also be a
formula or character vector. Use either a one sided formula, \code{~a + b},
or a character vector, \code{c("a", "b")}.}

\item{nrow}{Number of rows and columns.}

\item{ncol}{Number of rows and columns.}

\item{scales}{Should scales be fixed (\code{"fixed"}, the default),
free (\code{"free"}), or free in one dimension (\code{"free_x"},
\code{"free_y"})?}

\item{shrink}{If \code{TRUE}, will shrink scales to fit output of
statistics, not raw data. If \code{FALSE}, will be range of raw data
before statistical summary.}

\item{labeller}{A function that takes one data frame of labels and
returns a list or data frame of character vectors. Each input
column corresponds to one factor. Thus there will be more than
one with formulae of the type \code{~cyl + am}. Each output
column gets displayed as one separate line in the strip
label. This function should inherit from the "labeller" S3 class
for compatibility with \code{\link[ggplot2:labeller]{labeller()}}. See
\code{\link[ggplot2:label_value]{label_value()}} for more details and pointers to other
options.}

\item{as.table}{If \code{TRUE}, the default, the facets are laid out like
a table with highest values at the bottom-right. If \code{FALSE}, the
facets are laid out like a plot with the highest value at the top-right.}

\item{drop}{If \code{TRUE}, the default, all factor levels not used in the
data will automatically be dropped. If \code{FALSE}, all factor levels
will be shown, regardless of whether or not they appear in the data.}

\item{dir}{Direction: either \code{"h"} for horizontal, the default, or \code{"v"},
for vertical.}

\item{strip.position}{By default, the labels are displayed on the top of
the plot. Using \code{strip.position} it is possible to place the labels on
either of the four sides by setting \code{strip.position = c("top",
  "bottom", "left", "right")}}

\item{ideo.size}{\code{\link[grid]{unit}} value object of class \code{"unit"}
specifying ideogram size.}

\item{high.col}{\code{NA} (default) or colour value of ideogram highlights
(see details). If \code{NA}, no highlighting will occur.}
}
\description{
\code{facet_ideowrap()} mimicks behaviour of
\code{\link[ggplot2]{facet_wrap}} but adds ideograms. The facetting variables
are checked for chromosome names and if these are found, then ideograms are
plotted in between the strips and panels.
}
\details{
In absence of chromosome names in variables will result in default
  \code{facet_grid()} behaviour. A mix of chromosome names and other
  variables results in whitespace between the panels and other variable
  strips.

  By default, this function will not highlight the panel axis range. To
  highlight the plotted region on the ideogram, set \code{high.col} to a
  colour. If highlights occur, region to be highlighted will be computed from the
  relevant axis limits of the corresponding panels.

  Colours can be specified in one of the forms returned by
  \code{\link[grDevices]{rgb}}, as name (see \code{\link[grDevices]{colors}})
  or as non-negative integer index into the current
  \code{\link[grDevices]{palette}} (with zero being taken as transparent).
}
\note{
\code{\link[ggnomics]{setup_cytobands}} needs to be run to populate
  ideogram data before calling \code{facet_ideogrid}.
}
\examples{
setup_cytobands(example_cytobands(),
                example_cytoband_colours())

df <- cbind(mpg, chr = sample(c("chr1", "chr2"), nrow(mpg), replace = TRUE))
ggplot(df, aes(displ, cty)) +
  geom_point() +
  facet_ideowrap(~ chr)
}
\seealso{
\code{\link[ggplot2]{facet_grid}} \code{\link[grid]{unit}}
}
