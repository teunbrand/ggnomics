% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_genemodel.R
\name{geom_genemodel}
\alias{geom_genemodel}
\title{Gene models}
\usage{
geom_genemodel(
  mapping = NULL,
  data = NULL,
  stat = "identity",
  position = position_disjoint_ranges(extend = 10000),
  ...,
  intron.style = "arrowline",
  arrow = NULL,
  arrow.freq = unit(4, "mm"),
  chevron.height = 1,
  linejoin = "mitre",
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE
)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[ggplot2:aes]{aes()}} or
\code{\link[ggplot2:aes_]{aes_()}}. If specified and \code{inherit.aes = TRUE} (the
default), it is combined with the default mapping at the top level of the
plot. You must supply \code{mapping} if there is no plot mapping.}

\item{data}{The data to be displayed in this layer. There are three options:

  If \code{`NULL`}, the default, the data is inherited from the plot data as
  specified in the call to \code{\link[ggplot2]{ggplot}}.

  A \code{`data.frame`} or other object will override the plot data. All
  objects will be fortified to produce a \code{data.frame}. See
  \code{\link[ggplot2]{fortify}} for which variables will be created.

  A \code{`function`} will be called with a single argument, the plot data.
  The return value must be a \code{`data.frame`}, and will be used as the
  layer data. A \code{`function`} can be created from a \code{`formula`}
  (e.g. \code{`~ head(.x, 10)`}).

  A duo of wrapper functions for acquiring gene model data are available in
  \link[=genemodel_helpers]{genemodel helpers}.}

\item{stat}{The statistical transformation to use on the data for this
layer, as a string.}

\item{position}{Position adjustment, either as a string, or the result of a
call to a position adjustment function.
\code{\link[ggnomics]{position_disjoint_ranges}} is recommended when gene
models overlap.}

\item{...}{Other arguments passed on to \code{\link[ggplot2:layer]{layer()}}. These are
often aesthetics, used to set an aesthetic to a fixed value, like
\code{colour = "red"} or \code{size = 3}. They may also be parameters
to the paired geom/stat.}

\item{intron.style}{By default, introns are displayed as a series of arrows
(\code{"arrowline"}) when a \code{strand} aesthetic contains \code{"+"} or
\code{"-"}. Alternatively, a \code{"chevron"} option is available. In
absence of strand information, the intron style defaults to a simple line
(\code{"line"}).}

\item{arrow}{Specification for arrow heads, as created by
\code{\link[grid]{arrow}}. Only applicable when \code{intron.style =
"arrowline"} (the default). Defaults internally to \code{grid::arrow(length
= grid::unit(2, "mm"))}.}

\item{arrow.freq}{A \code{\link[grid]{unit}} object specifying the distance
over which arrows should be repeated. Only applicable when
\code{intron.style = "arrowline"}.}

\item{chevron.height}{A \code{numeric} of length one specifying how high
chevrons should rise relative to coding sequences. Only applicable when
\code{intron.style = "chevron"}.}

\item{linejoin}{Line join style (round, mitre, bevel).}

\item{na.rm}{If \code{FALSE}, the default, missing values are removed with
a warning. If \code{TRUE}, missing values are silently removed.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.
It can also be a named logical vector to finely select the aesthetics to
display.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[ggplot2:borders]{borders()}}.}
}
\description{
\code{geom_genemodel} is a specialised geom for drawing gene
  models. It draws coding sequences thicker than untranslated regions and
  styles introns with arrows, lines or chevrons. By default, it separates
  different overlapping models along the y-axis.
}
\details{
The expected input format is that every exon has its own row. The
  genomic location of the exons are to be given to the \code{xmin} aesthetic
  for start positions and the \code{xmax} aesthetic for the end position.
  Genes are interpreted to be groups of exons specified by the required
  \code{group} aesthetic. Exons that belong to the same group will be
  connected by introns.

  Optionally, a distinction between coding sequences (CDSs) and untranslated
  regions (UTRs) can be made for each exon by providing the \code{type}
  aesthetic, which checks for a case-insensitive match with the string
  \code{"utr"}. Also, strand information can be used to style introns in the
  \code{"arrowline"} or \code{"chevron"} fashion by providing a \code{strand}
  aesthetic, which assumes that \code{"+"} should be oriented left-to-right
  and \code{"-"} should be right-to-left. A \code{y} aesthetic can be
  provided to offset the gene models from the x-axis. The \code{thickness}
  aesthetic controls how thick a CDS should be drawn in y-axis units.

  Alternatively, this geom can also be used to visualise transcript models,
  in which case the following recommendations apply. Supply a transcript name
  or transcript ID to the group aesthetic instead of a gene name or gene ID.
  Set \code{intron.style = "chevron"} which is more appropriate for splice
  junctions.
}
\section{Aesthetics}{


  \code{geom_genemodel} understands the following aesthetics (required
  aesthetics are in bold, optional aesthetics in italics)

  \itemize{ \item{\strong{xmax}} \item{\strong{xmin}} \item{\strong{group}}
  \item{\emph{y}} \item{\emph{thickness}} \item{\emph{type}}
  \item{\emph{strand}} \item{colour} \item{fill} \item{size} \item{linetype}
  \item{alpha} }
}

\examples{
df <- example_genemodels()

ggplot(df) +
  geom_genemodel(
    aes(xmin = start, xmax = end,
        strand = strand, type = type,
        group = name)
  )
}
\seealso{
\code{\link[ggnomics]{position_disjoint_ranges}}
}
