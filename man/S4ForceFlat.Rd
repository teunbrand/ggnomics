% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/force_flat.R
\name{S4ForceFlat}
\alias{S4ForceFlat}
\alias{S4ForceFlat,WoodenHorse,ANY-method}
\alias{S4ForceFlat,numeric,numeric-method}
\alias{S4ForceFlat,Vector,numeric-method}
\alias{S4ForceFlat,IntegerRanges,numeric-method}
\alias{S4ForceFlat,ANYGenomic,GRanges-method}
\title{Force an vector to be flat}
\usage{
S4ForceFlat(x, limits = NULL, aes = "z")
}
\arguments{
\item{x}{A vector}

\item{limits}{A representation of limits}

\item{aes}{An aesthetic for which to evaluate the flattening.}
}
\value{
A \code{numeric} vector with values between 0-1
}
\description{
This is typically the last step when a geom requests a
  coordinate system to transform the data values between a numeric range
  between 0 and 1.
}
\details{
When using a ranged class as \code{x} argument, the result can be
  evaluated differently depending on the \code{aes} argument. For example,
  when \code{x} is an \code{IRanges} class, setting \code{aes = "xmin"} gives
  rescaled start values and \code{aes = "xmax"} gives rescaled end values.
}
\section{Methods (by class)}{
\itemize{
\item \code{x = WoodenHorse,limits = ANY}: Releases the \code{GreekSoldier} attribute and call
the generic on the result.

\item \code{x = numeric,limits = numeric}: Calls \code{scales::rescale}.

\item \code{x = Vector,limits = numeric}: Attempts to coerce to a vector first.

\item \code{x = IntegerRanges,limits = numeric}: for xmin/ymin gives start, for xmax/ymax gives
end, otherwise gives midpoint.

\item \code{x = ANYGenomic,limits = GRanges}: Linearises seqlevels, then gives start for xmin/ymin
and end for xmax/xmax.
}}

\examples{
S4ForceFlat(1:5, limits = c(1, 5))

# Range classes give different results based on the aes argument
require(GenomicRanges)
value  <- GRanges(c("chr1:10-20", "chr2:10-20"))
limits <- GRanges(c("chr1:1-30", "chr2:1-30"))
S4ForceFlat(value, limits, aes = "xmin")
S4ForceFlat(value, limits, aes = "xmax")
}
