% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scales_constructors_genomic.R
\name{scale_genomic}
\alias{scale_genomic}
\alias{scale_x_genomic}
\alias{scale_y_genomic}
\title{Position scales for genomic data (x & y)}
\usage{
scale_x_genomic(
  name = waiver(),
  breaks = waiver(),
  minor_breaks = waiver(),
  n.breaks = NULL,
  labels = waiver(),
  minor_labels = waiver(),
  limits = NULL,
  expand = waiver(),
  oob = censorThis,
  na.value = NA_real_,
  trans = S4TransIdentity,
  guide = "genomic_axis",
  position = "bottom",
  sec.axis = waiver()
)

scale_y_genomic(
  name = waiver(),
  breaks = waiver(),
  minor_breaks = waiver(),
  n.breaks = NULL,
  labels = waiver(),
  minor_labels = waiver(),
  limits = NULL,
  expand = waiver(),
  oob = censorThis,
  na.value = NA_real_,
  trans = S4TransIdentity,
  guide = "genomic_axis",
  position = "left",
  sec.axis = waiver()
)
}
\arguments{
\item{name}{The name of the scale. Used as the axis or legend title. If
\code{waiver()}, the default, the name of the scale is taken from the first
mapping used for that aesthetic. If \code{NULL}, the legend title will be
omitted.}

\item{breaks}{One of:
\itemize{
 \item \code{NULL} for no breaks
 \item \code{waiver()} for the default breaks computed by the
 transformation object.
 \item A \code{GPos} object of positions.
 \item A function that takes the \code{GRanges} limits and returns
 \code{GPos} breaks as output.
}}

\item{minor_breaks}{One of:
\itemize{
 \item \code{NULL} for no minor breaks
 \item \code{waiver()} for the default minor breaks.
 \item A \code{GPos} object of positions.
 \item A function that takes the \code{GRanges} limits and returns
 \code{GPos} minor breaks as output.
}}

\item{n.breaks}{An integer guiding the number of major breaks. The algorithm
may choose a slightly different number to ensure nice break labels. Will
only have an effect if \code{breaks = waiver()}. Use \code{NULL} to use the default
number of breaks given by the transformation.}

\item{labels}{One of:
\itemize{
\item \code{NULL} for no labels
\item \code{waiver()} for the default labels computed by the
transformation object
\item A character vector giving labels (must be same length as \code{breaks})
\item A function that takes the breaks as input and returns labels
as output
}}

\item{minor_labels}{One of:
\itemize{
 \item \code{NULL} for no minor labels.
 \item \code{waiver()} for the default labels computed by the
 transformation object.
 \item A \code{character} vector giving labels (must be same length as
 \code{minor_breaks}.)
 \item A \code{function} that takes the minor breaks as input and returns
 labels as output.
}
Keep in mind that displaying the minor labels is dependent on wether the
\code{guide} supports this and the default \code{guide_axis()} does not.}

\item{limits}{One of:
\itemize{
 \item \code{NULL} to use the default scale range .
 \item A \code{GRanges} object with at most one range per seqlevel to be
 displayed.
 \item A function that accepts the existing (automatic) limits as
 \code{GRanges} object and returns the new limits as a \code{GRanges}
 object.
}
Note that by default, setting limits on positional
scales will \strong{remove} data outside of the limits. Change the
\code{oob} argument to change this behaviour.}

\item{expand}{For position scales, a vector of range expansion constants used to add some
padding around the data to ensure that they are placed some distance
away from the axes. Use the convenience function \code{\link[ggplot2:expansion]{expansion()}}
to generate the values for the \code{expand} argument. The defaults are to
expand the scale by 5\% on each side for continuous variables, and by
0.6 units on each side for discrete variables.}

\item{oob}{One of:
\itemize{
\item Function that handles limits outside of the scale limits
(out of bounds).
\item The default (\code{\link[scales:censor]{scales::censor()}}) replaces out of
bounds values with \code{NA}.
\item \code{\link[scales:squish]{scales::squish()}} for squishing out of bounds values into range.
\item \code{\link[scales:squish_infinite]{scales::squish_infinite()}} for squishing infitite values into range.
}}

\item{na.value}{Missing values will be replaced with this value.}

\item{trans}{For continuous scales, the name of a transformation object
or the object itself. Built-in transformations include "asn", "atanh",
"boxcox", "date", "exp", "hms", "identity", "log", "log10", "log1p", "log2",
"logit", "modulus", "probability", "probit", "pseudo_log", "reciprocal",
"reverse", "sqrt" and "time".

A transformation object bundles together a transform, its inverse,
and methods for generating breaks and labels. Transformation objects
are defined in the scales package, and are called \verb{<name>_trans} (e.g.,
\code{\link[scales:boxcox_trans]{scales::boxcox_trans()}}). You can create your own
transformation with \code{\link[scales:trans_new]{scales::trans_new()}}.}

\item{guide}{A function used to create a guide or its name. See
\code{\link[ggplot2:guides]{guides()}} for more information.}

\item{position}{For position scales, The position of the axis.
\code{left} or \code{right} for y axes, \code{top} or \code{bottom} for x axes.}

\item{sec.axis}{\code{\link[ggplot2:sec_axis]{sec_axis()}} is used to specify a secondary axis.}
}
\value{
A \code{ScaleS4} ggproto object.
}
\description{
\code{scale_x_genomic()} and \code{scale_y_genomic()} are the
  default scales for x and y aesthetics defined as representations of genomic
  positions such as \linkS4class{GPos} and \linkS4class{GRanges}
  (sub)-classes.
}
\details{
It is important to note that the scale operates in genomic space
  when limits are defined as or inferred to be of the \code{GRanges} class.
  This has the following known consequences:
  \enumerate{
   \item Data represented by unclassed numerical values can not be used on
   this scale.
   \item The scale limits and breaks are represented by \code{GRanges} and
   \code{GPos} objects.
  }
  Furthermore, scale expansions as set through the \code{expand} argument,
  expand the scale limits per individual \code{seqlevel}.
}
\examples{
require(GenomicRanges)

df <- DataFrame(
  x = GRanges(c("chr1:1000-2000", "chr1:1500-2500",
                "chr2:3000-4000", "chr3:4000-4500")),
  y = c(1, 2, 3, 2)
)

# The default scale for GenomicRanges is scale_(x|y)_genomic()
g <- ggplot(df, aes(xmin = x, xmax = x,
                    ymin = y - 0.2, ymax = y + 0.2)) +
  geom_rect()
g

# Major labels are parallel to the seqnames
g + scale_x_genomic(labels = LETTERS[1:3])

# Minor breaks are positional and specified with GPos or 1-width GRanges
g + scale_x_genomic(
  minor_breaks =  GPos(c("chr1:2000", "chr2:3500", "chr3:4000"))
)

# Minor breaks can also be labelled
g + scale_x_genomic(
  minor_breaks =  GPos(c("chr1:2000", "chr2:3500", "chr3:4000")),
  minor_labels = LETTERS[1:3]
)
}
\seealso{
The \code{\link[GenomicRanges]{GRanges}} class and
  \code{\link[GenomicRanges]{GPos}} class.
}
